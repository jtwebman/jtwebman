---
import BaseLayout from './BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { siteConfig } from '../config/site';
import {
  generateBlogPostStructuredData,
  generateBreadcrumbStructuredData,
} from '../utils/structured-data';

export interface Props {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  heroImage?: string;
  category: string;
  tags?: string[];
  readingTime?: string;
}

const { title, description, pubDate, updatedDate, heroImage, category, tags, readingTime } =
  Astro.props;

const formattedDate = new Date(pubDate).toLocaleDateString(siteConfig.defaults.locale, {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const formattedUpdatedDate = updatedDate
  ? new Date(updatedDate).toLocaleDateString(siteConfig.defaults.locale, {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : null;

// Social sharing URLs
const currentUrl = Astro.url.href;
const twitterText = `${title} @jtwebman`;
const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(twitterText)}&url=${encodeURIComponent(currentUrl)}`;
const linkedinUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(currentUrl)}`;

// Structured data
const blogPostStructuredData = generateBlogPostStructuredData({
  title,
  description,
  datePublished: pubDate.toISOString(),
  dateModified: updatedDate?.toISOString(),
  author: siteConfig.author.name,
  image: heroImage,
  url: currentUrl,
});

const breadcrumbStructuredData = generateBreadcrumbStructuredData([
  { name: 'Home', url: siteConfig.url },
  { name: 'Blog', url: `${siteConfig.url}/blog` },
  { name: title, url: currentUrl },
]);

// Combine structured data
const combinedStructuredData = [blogPostStructuredData, breadcrumbStructuredData];
---

<BaseLayout
  title={title}
  description={description}
  image={heroImage}
  structuredData={combinedStructuredData}
>
  <div class="flex flex-col min-h-screen">
    <Header />

    <main class="flex-grow bg-gray-50 dark:bg-gray-900">
      <article class="container mx-auto px-4 py-12 lg:py-20">
        <div class="max-w-4xl mx-auto">
          <!-- Navigation -->
          <nav class="mb-8">
            <a
              href="/blog"
              class="inline-flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 19l-7-7 7-7"></path>
              </svg>
              Back to Blog
            </a>
          </nav>

          <!-- Article Header -->
          <header class="mb-12 text-center">
            <h1
              class="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-gray-100 mb-6 leading-tight"
            >
              {title}
            </h1>

            <div
              class="flex flex-wrap items-center justify-center gap-4 text-sm text-gray-600 dark:text-gray-400 mb-6"
            >
              <div class="flex items-center gap-2">
                <img
                  src={siteConfig.author.avatar}
                  alt={siteConfig.author.name}
                  class="w-8 h-8 rounded-full border border-gray-200 dark:border-gray-700"
                />
                <span>{siteConfig.author.name}</span>
              </div>
              <span>â€¢</span>
              <time datetime={pubDate.toISOString()}>{formattedDate}</time>
              {
                readingTime && (
                  <>
                    <span>â€¢</span>
                    <span>{readingTime}</span>
                  </>
                )
              }
              {
                formattedUpdatedDate && (
                  <>
                    <span>â€¢</span>
                    <span>Updated {formattedUpdatedDate}</span>
                  </>
                )
              }
            </div>

            <div class="flex flex-wrap items-center justify-center gap-3">
              <span
                class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm font-medium"
              >
                {category}
              </span>
              {
                tags &&
                  tags.length > 0 &&
                  tags.map(tag => (
                    <span class="px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded text-xs">
                      {tag}
                    </span>
                  ))
              }
            </div>
          </header>

          <!-- Article Content -->
          <div
            class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden shadow-sm"
          >
            <div class="px-8 lg:px-12 py-10 lg:py-16">
              <div class="prose prose-xl dark:prose-invert max-w-none">
                <slot />
              </div>
            </div>
          </div>

          <!-- Discussion Footer -->
          <footer
            class="mt-16 bg-white dark:bg-gray-800 rounded-lg p-8 border border-gray-200 dark:border-gray-700 shadow-sm"
          >
            <div class="text-center">
              <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2">
                ðŸ’¬ Join the Discussion
              </h3>
              <p class="text-gray-600 dark:text-gray-400 mb-6">
                Share your thoughts or questions about this post on social media
              </p>

              <div class="flex flex-col sm:flex-row items-center justify-center gap-4">
                <a
                  href={twitterUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
                >
                  <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                    <path
                      d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
                    ></path>
                  </svg>
                  Discuss on Twitter
                </a>

                <a
                  href={linkedinUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center gap-2 px-6 py-3 bg-blue-700 text-white rounded-lg hover:bg-blue-800 transition-colors font-medium"
                >
                  <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                    <path
                      d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
                    ></path>
                  </svg>
                  Share on LinkedIn
                </a>
              </div>
            </div>
          </footer>
        </div>
      </article>
    </main>

    <Footer />
  </div>
</BaseLayout>
